// <auto-generated />
using System;
using System.Collections.Generic;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240921195829_PhotoPathIsValueObjects")]
    partial class PhotoPathIsValueObjects
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Aggregates.Species.Entities.Breed", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("species_id")
                        .HasColumnType("uuid")
                        .HasColumnName("species_id");

                    b.ComplexProperty<Dictionary<string, object>>("Description", "Domain.Aggregates.Species.Entities.Breed.Description#Description", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(2000)
                                .HasColumnType("character varying(2000)")
                                .HasColumnName("description");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Name", "Domain.Aggregates.Species.Entities.Breed.Name#Name", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("name");
                        });

                    b.HasKey("Id")
                        .HasName("pk_breeds");

                    b.HasIndex("species_id")
                        .HasDatabaseName("ix_breeds_species_id");

                    b.ToTable("breeds", (string)null);
                });

            modelBuilder.Entity("Domain.Aggregates.Species.Species", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.ComplexProperty<Dictionary<string, object>>("Description", "Domain.Aggregates.Species.Species.Description#Description", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(2000)
                                .HasColumnType("character varying(2000)")
                                .HasColumnName("description");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Name", "Domain.Aggregates.Species.Species.Name#Name", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("name");
                        });

                    b.HasKey("Id")
                        .HasName("pk_species");

                    b.ToTable("species", (string)null);
                });

            modelBuilder.Entity("Domain.Aggregates.Volunteer.Entities.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("HelpStatus")
                        .HasColumnType("integer")
                        .HasColumnName("help_status");

                    b.Property<bool>("IsNeutered")
                        .HasColumnType("boolean")
                        .HasColumnName("is_neutered");

                    b.Property<bool>("IsVaccinated")
                        .HasColumnType("boolean")
                        .HasColumnName("is_vaccinated");

                    b.Property<bool>("_isDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("volunteer_id")
                        .HasColumnType("uuid")
                        .HasColumnName("volunteer_id");

                    b.ComplexProperty<Dictionary<string, object>>("Color", "Domain.Aggregates.Volunteer.Entities.Pet.Color#Color", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("color");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("DateOfBirth", "Domain.Aggregates.Volunteer.Entities.Pet.DateOfBirth#DateOfBirth", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateOnly>("Value")
                                .HasColumnType("date")
                                .HasColumnName("date_of_birth");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Description", "Domain.Aggregates.Volunteer.Entities.Pet.Description#Description", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(2000)
                                .HasColumnType("character varying(2000)")
                                .HasColumnName("description");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Height", "Domain.Aggregates.Volunteer.Entities.Pet.Height#Height", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<double>("Value")
                                .HasColumnType("double precision")
                                .HasColumnName("height");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("InformationHealth", "Domain.Aggregates.Volunteer.Entities.Pet.InformationHealth#InformationHealth", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(2000)
                                .HasColumnType("character varying(2000)")
                                .HasColumnName("information_health");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Name", "Domain.Aggregates.Volunteer.Entities.Pet.Name#Name", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("name");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("PhoneNumber", "Domain.Aggregates.Volunteer.Entities.Pet.PhoneNumber#PhoneNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(19)
                                .HasColumnType("character varying(19)")
                                .HasColumnName("phone_number");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Type", "Domain.Aggregates.Volunteer.Entities.Pet.Type#Type", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<Guid>("BreedId")
                                .HasColumnType("uuid")
                                .HasColumnName("type_breed_id");

                            b1.Property<Guid>("SpeciesId")
                                .HasColumnType("uuid")
                                .HasColumnName("type_species_id");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Weight", "Domain.Aggregates.Volunteer.Entities.Pet.Weight#Weight", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<double>("Value")
                                .HasColumnType("double precision")
                                .HasColumnName("weight");
                        });

                    b.HasKey("Id")
                        .HasName("pk_pets");

                    b.HasIndex("volunteer_id")
                        .HasDatabaseName("ix_pets_volunteer_id");

                    b.ToTable("pets", (string)null);
                });

            modelBuilder.Entity("Domain.Aggregates.Volunteer.Volunteer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("_isDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.ComplexProperty<Dictionary<string, object>>("Description", "Domain.Aggregates.Volunteer.Volunteer.Description#Description", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(2000)
                                .HasColumnType("character varying(2000)")
                                .HasColumnName("description");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Email", "Domain.Aggregates.Volunteer.Volunteer.Email#Email", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(320)
                                .HasColumnType("character varying(320)")
                                .HasColumnName("email");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("PhoneNumber", "Domain.Aggregates.Volunteer.Volunteer.PhoneNumber#PhoneNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(19)
                                .HasColumnType("character varying(19)")
                                .HasColumnName("phone_number");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("YearsExperience", "Domain.Aggregates.Volunteer.Volunteer.YearsExperience#YearsExperience", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Value")
                                .HasColumnType("integer")
                                .HasColumnName("years_experience");
                        });

                    b.HasKey("Id")
                        .HasName("pk_volunteers");

                    b.ToTable("volunteers", (string)null);
                });

            modelBuilder.Entity("Domain.Aggregates.Species.Entities.Breed", b =>
                {
                    b.HasOne("Domain.Aggregates.Species.Species", null)
                        .WithMany("Breeds")
                        .HasForeignKey("species_id")
                        .HasConstraintName("fk_breeds_species_species_id");
                });

            modelBuilder.Entity("Domain.Aggregates.Volunteer.Entities.Pet", b =>
                {
                    b.HasOne("Domain.Aggregates.Volunteer.Volunteer", null)
                        .WithMany("Pets")
                        .HasForeignKey("volunteer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_pets_volunteers_volunteer_id");

                    b.OwnsOne("Domain.Aggregates.Volunteer.Entities.Pet.Requisites#ValueObjectList", "Requisites", b1 =>
                        {
                            b1.Property<Guid>("PetId")
                                .HasColumnType("uuid");

                            b1.HasKey("PetId")
                                .HasName("pk_pets");

                            b1.ToTable("pets");

                            b1.ToJson("requisites");

                            b1.WithOwner()
                                .HasForeignKey("PetId")
                                .HasConstraintName("fk_pets_pets_pet_id");

                            b1.OwnsMany("Domain.Aggregates.Volunteer.ValueObjects.Requisite", "Values", b2 =>
                                {
                                    b2.Property<Guid>("ValueObjectListPetId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.HasKey("ValueObjectListPetId", "Id")
                                        .HasName("pk_pets");

                                    b2.ToTable("pets");

                                    b2.WithOwner()
                                        .HasForeignKey("ValueObjectListPetId")
                                        .HasConstraintName("fk_pets_pets_value_object_list_pet_id");

                                    b2.OwnsOne("Domain.CommonValueObjects.Description", "Description", b3 =>
                                        {
                                            b3.Property<Guid>("RequisiteValueObjectListPetId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("RequisiteId")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .HasMaxLength(2000)
                                                .HasColumnType("character varying(2000)");

                                            b3.HasKey("RequisiteValueObjectListPetId", "RequisiteId")
                                                .HasName("pk_pets");

                                            b3.ToTable("pets");

                                            b3.WithOwner()
                                                .HasForeignKey("RequisiteValueObjectListPetId", "RequisiteId")
                                                .HasConstraintName("fk_pets_pets_requisite_value_object_list_pet_id_requisite_id");
                                        });

                                    b2.OwnsOne("Domain.CommonValueObjects.Name", "Name", b3 =>
                                        {
                                            b3.Property<Guid>("RequisiteValueObjectListPetId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("RequisiteId")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .HasMaxLength(100)
                                                .HasColumnType("character varying(100)");

                                            b3.HasKey("RequisiteValueObjectListPetId", "RequisiteId")
                                                .HasName("pk_pets");

                                            b3.ToTable("pets");

                                            b3.WithOwner()
                                                .HasForeignKey("RequisiteValueObjectListPetId", "RequisiteId")
                                                .HasConstraintName("fk_pets_pets_requisite_value_object_list_pet_id_requisite_id");
                                        });

                                    b2.Navigation("Description")
                                        .IsRequired();

                                    b2.Navigation("Name")
                                        .IsRequired();
                                });

                            b1.Navigation("Values");
                        });

                    b.OwnsOne("Domain.Aggregates.Volunteer.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("PetId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("House")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.HasKey("PetId");

                            b1.ToTable("pets");

                            b1.ToJson("address");

                            b1.WithOwner()
                                .HasForeignKey("PetId")
                                .HasConstraintName("fk_pets_pets_id");
                        });

                    b.OwnsOne("Domain.CommonValueObjects.ValueObjectList<Domain.Aggregates.Volunteer.ValueObjects.PetPhoto>", "PetPhotos", b1 =>
                        {
                            b1.Property<Guid>("PetId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.HasKey("PetId");

                            b1.ToTable("pets");

                            b1.ToJson("pet_photos");

                            b1.WithOwner()
                                .HasForeignKey("PetId")
                                .HasConstraintName("fk_pets_pets_id");

                            b1.OwnsMany("Domain.Aggregates.Volunteer.ValueObjects.PetPhoto", "Values", b2 =>
                                {
                                    b2.Property<Guid>("ValueObjectListPetId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<bool>("IsMain")
                                        .HasColumnType("boolean");

                                    b2.HasKey("ValueObjectListPetId", "Id")
                                        .HasName("pk_pets");

                                    b2.ToTable("pets");

                                    b2.WithOwner()
                                        .HasForeignKey("ValueObjectListPetId")
                                        .HasConstraintName("fk_pets_pets_value_object_list_pet_id");

                                    b2.OwnsOne("Domain.Aggregates.Volunteer.ValueObjects.PhotoPath", "Path", b3 =>
                                        {
                                            b3.Property<Guid>("PetPhotoValueObjectListPetId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("PetPhotoId")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.HasKey("PetPhotoValueObjectListPetId", "PetPhotoId")
                                                .HasName("pk_pets");

                                            b3.ToTable("pets");

                                            b3.WithOwner()
                                                .HasForeignKey("PetPhotoValueObjectListPetId", "PetPhotoId")
                                                .HasConstraintName("fk_pets_pets_pet_photo_value_object_list_pet_id_pet_photo_id");
                                        });

                                    b2.Navigation("Path")
                                        .IsRequired();
                                });

                            b1.Navigation("Values");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("PetPhotos")
                        .IsRequired();

                    b.Navigation("Requisites")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Aggregates.Volunteer.Volunteer", b =>
                {
                    b.OwnsOne("Domain.Aggregates.Volunteer.ValueObjects.FullName", "FullName", b1 =>
                        {
                            b1.Property<Guid>("VolunteerId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Patronymic")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.HasKey("VolunteerId");

                            b1.ToTable("volunteers");

                            b1.ToJson("full_name");

                            b1.WithOwner()
                                .HasForeignKey("VolunteerId")
                                .HasConstraintName("fk_volunteers_volunteers_id");
                        });

                    b.OwnsOne("Domain.CommonValueObjects.ValueObjectList<Domain.Aggregates.Volunteer.ValueObjects.Requisite>", "Requisites", b1 =>
                        {
                            b1.Property<Guid>("VolunteerId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.HasKey("VolunteerId");

                            b1.ToTable("volunteers");

                            b1.ToJson("requisites");

                            b1.WithOwner()
                                .HasForeignKey("VolunteerId")
                                .HasConstraintName("fk_volunteers_volunteers_id");

                            b1.OwnsMany("Domain.Aggregates.Volunteer.ValueObjects.Requisite", "Values", b2 =>
                                {
                                    b2.Property<Guid>("ValueObjectList<Requisite>VolunteerId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.HasKey("ValueObjectList<Requisite>VolunteerId", "Id")
                                        .HasName("pk_volunteers");

                                    b2.ToTable("volunteers");

                                    b2.WithOwner()
                                        .HasForeignKey("ValueObjectList<Requisite>VolunteerId")
                                        .HasConstraintName("fk_volunteers_volunteers_value_object_list_requisite_volunteer_id");

                                    b2.OwnsOne("Domain.CommonValueObjects.Description", "Description", b3 =>
                                        {
                                            b3.Property<Guid>("RequisiteValueObjectList<Requisite>VolunteerId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("RequisiteId")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .HasMaxLength(2000)
                                                .HasColumnType("character varying(2000)");

                                            b3.HasKey("RequisiteValueObjectList<Requisite>VolunteerId", "RequisiteId")
                                                .HasName("pk_volunteers");

                                            b3.ToTable("volunteers");

                                            b3.WithOwner()
                                                .HasForeignKey("RequisiteValueObjectList<Requisite>VolunteerId", "RequisiteId")
                                                .HasConstraintName("fk_volunteers_volunteers_requisite_value_object_list_requisite_vo");
                                        });

                                    b2.OwnsOne("Domain.CommonValueObjects.Name", "Name", b3 =>
                                        {
                                            b3.Property<Guid>("RequisiteValueObjectList<Requisite>VolunteerId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("RequisiteId")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .HasMaxLength(100)
                                                .HasColumnType("character varying(100)");

                                            b3.HasKey("RequisiteValueObjectList<Requisite>VolunteerId", "RequisiteId")
                                                .HasName("pk_volunteers");

                                            b3.ToTable("volunteers");

                                            b3.WithOwner()
                                                .HasForeignKey("RequisiteValueObjectList<Requisite>VolunteerId", "RequisiteId")
                                                .HasConstraintName("fk_volunteers_volunteers_requisite_value_object_list_requisite_vo");
                                        });

                                    b2.Navigation("Description")
                                        .IsRequired();

                                    b2.Navigation("Name")
                                        .IsRequired();
                                });

                            b1.Navigation("Values");
                        });

                    b.OwnsOne("Domain.CommonValueObjects.ValueObjectList<Domain.Aggregates.Volunteer.ValueObjects.SocialNetwork>", "SocialNetworks", b1 =>
                        {
                            b1.Property<Guid>("VolunteerId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.HasKey("VolunteerId");

                            b1.ToTable("volunteers");

                            b1.ToJson("social_networks");

                            b1.WithOwner()
                                .HasForeignKey("VolunteerId")
                                .HasConstraintName("fk_volunteers_volunteers_id");

                            b1.OwnsMany("Domain.Aggregates.Volunteer.ValueObjects.SocialNetwork", "Values", b2 =>
                                {
                                    b2.Property<Guid>("ValueObjectListVolunteerId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.HasKey("ValueObjectListVolunteerId", "Id")
                                        .HasName("pk_volunteers");

                                    b2.ToTable("volunteers");

                                    b2.WithOwner()
                                        .HasForeignKey("ValueObjectListVolunteerId")
                                        .HasConstraintName("fk_volunteers_volunteers_value_object_list_volunteer_id");

                                    b2.OwnsOne("Domain.Aggregates.Volunteer.ValueObjects.Link", "Link", b3 =>
                                        {
                                            b3.Property<Guid>("SocialNetworkValueObjectListVolunteerId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("SocialNetworkId")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .HasMaxLength(2000)
                                                .HasColumnType("character varying(2000)");

                                            b3.HasKey("SocialNetworkValueObjectListVolunteerId", "SocialNetworkId")
                                                .HasName("pk_volunteers");

                                            b3.ToTable("volunteers");

                                            b3.WithOwner()
                                                .HasForeignKey("SocialNetworkValueObjectListVolunteerId", "SocialNetworkId")
                                                .HasConstraintName("fk_volunteers_volunteers_social_network_value_object_list_volunteer");
                                        });

                                    b2.OwnsOne("Domain.CommonValueObjects.Name", "Name", b3 =>
                                        {
                                            b3.Property<Guid>("SocialNetworkValueObjectListVolunteerId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("SocialNetworkId")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .HasMaxLength(100)
                                                .HasColumnType("character varying(100)");

                                            b3.HasKey("SocialNetworkValueObjectListVolunteerId", "SocialNetworkId")
                                                .HasName("pk_volunteers");

                                            b3.ToTable("volunteers");

                                            b3.WithOwner()
                                                .HasForeignKey("SocialNetworkValueObjectListVolunteerId", "SocialNetworkId")
                                                .HasConstraintName("fk_volunteers_volunteers_social_network_value_object_list_volunteer");
                                        });

                                    b2.Navigation("Link")
                                        .IsRequired();

                                    b2.Navigation("Name")
                                        .IsRequired();
                                });

                            b1.Navigation("Values");
                        });

                    b.Navigation("FullName")
                        .IsRequired();

                    b.Navigation("Requisites")
                        .IsRequired();

                    b.Navigation("SocialNetworks")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Aggregates.Species.Species", b =>
                {
                    b.Navigation("Breeds");
                });

            modelBuilder.Entity("Domain.Aggregates.Volunteer.Volunteer", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
